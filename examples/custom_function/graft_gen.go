// Code generated by graftgen (version devel); DO NOT EDIT.

// Source interfaces: Mapper
// Command: graftgen -interface=Mapper -output=graft_gen.go

package custom_function

// map_A_to_B maps a value of type A to B.
func map_A_to_B(in A) B {
	// Destination zero value; fields populated by node sequence below.
	var dst B
	dst = AToB(in)

	return dst
}

// map_Ptr_A_to_Ptr_B maps a value of type *A to *B.
func map_Ptr_A_to_Ptr_B(in *A) (*B, error) {
	if in == nil {
		return nil, nil
	}
	// Allocate destination pointer
	dst := new(B)
	tmp, err := AToBErr(in)
	if err != nil {
		return dst, err
	}
	dst = tmp

	return dst, nil
}

// mapperImpl is the generated implementation of Mapper.
type mapperImpl struct{}

// NewMapper returns a new Mapper implementation.
func NewMapper() Mapper { return &mapperImpl{} }

// Map maps a to the destination type.
func (m *mapperImpl) Map(a A) B {
	return map_A_to_B(a)
}

// MapErr maps a to the destination type.
func (m *mapperImpl) MapErr(a *A) (*B, error) {
	return map_Ptr_A_to_Ptr_B(a)
}
